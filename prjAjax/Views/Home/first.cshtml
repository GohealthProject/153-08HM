
@{
    ViewData["Title"] = "first";
}

<h1>first</h1>


<button id="buttonStart" class="btn btn-primary">Ajax Start</button>
<button id="buttonStop" class="btn btn-primary">Ajax Stop</button>
<img src="~/images/1.png" id="img1" style="display:none" />
<div id="div1" class="alert alert-info"></div>

@section Scripts{
    <script>



        //找到要控制的對象
        const btn = document.querySelector('#buttonStart');
        const theDiv = document.querySelector('#div1');
        const btnStop = document.querySelector('#bbuttonStop');
        const img = document.querySelector('#img1');
        //在甚麼情況下(event)
  //步驟一建立Ajax物件
  const xhr = new XMLHttpRequest();
 //停止ajax程式
        btnStop.addEventListener('click',()=>{
        xhr.abort();
        
        })
        btn.addEventListener('click',()=>{
            //做甚麼事 Ajax
           
          
          
            //步驟二對伺服器發出要求 > controller/action
            //@Url.Content("~/Ajax/Index")
            //@Url.Action("Index","api")
            xhr.open('GET', '@Url.Content("~/Ajax/Index")?name=jack&id=1');
        xhr.send();


        xhr.addEventListener('load',()=>{
                xhr.addEventListener('loadstart', () => {
                    theDiv.innerHTML += "Ajax開始<br/>"
                    img.style.display = "inline";
                    btn.setAttribute('disabled', 'disabled');
                    btn.innerHTML = "Loading...";
                })
                xhr.addEventListener('loadend', () => {
                    theDiv.innerHTML += "Ajax結束<br/>"
                    img.style.display = "none";
                    btn.removeAttribute("disabled");
                    btn.innerHTML = "Ajax Start";
                })


                xhr.addEventListener('load', () => {
                //步驟三接收伺服器回傳的資料
        const text=xhr.responseText;
                //步驟四讀取資料
                //步驟五顯示資料
        theDiv.innerHTML=text;
                    theDiv.innerHTML += text + '< br/>';
        })
                //timeout時間到會觸發此事件
                xhr.addEventListener('timeout', () => {
                    theDiv.innerHTML += '伺服器忙碌中，請稍後再來< br />';
                })
                //abort方法被呼叫會觸發此事件
                xhr.addEventListener('abort', () => {
                    theDiv.innerHTML += '您停止了程式的執行< br />';
                })
                xhr.open('GET', '@Url.Content("~/api/index")?name=Jack&age=30');
                xhr.timeout = 3000; //要設定在open()方法之後
                xhr.send();




        })

            </script>


}
